plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'

    id 'maven-publish'
}

android {
    buildFeatures {
        compose true
    }
    compileSdk 30
    buildToolsVersion "30.0.3"

    composeOptions {
        kotlinCompilerVersion kotlinCompilerVersion
        kotlinCompilerExtensionVersion compose_version
    }
    defaultConfig {
        minSdk 21
        targetSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

def versionName = "1.0.0"
def artifactName = "draggable-list"

//def githubProperties = new Properties()
//githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = "com.wakaztahir"
                artifactId = artifactName
                version = versionName
            }
        }
//        repositories {
//            maven {
//                name = "GithubPackages"
//                /** Configure path of your package repository on Github
//                 *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
//                 */
//                url = uri("https://maven.pkg.github.com/timeline-notes/compose-draggable-list")
//
//                credentials {
//                    /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
//                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
//                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
//                }
//            }
//        }
    }
}